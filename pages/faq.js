import Footer from "../components/Footer";
import Header from "../components/Header";
import Head from "next/head";
import styles from "/styles/Faq.module.css";
import { useUser } from "@auth0/nextjs-auth0/client";
import Link from "next/link";
import Question from "../components/Question";
import { useState } from "react";
import Router from "next/router";
import MyModal from "../components/ModalAnswer";

import prisma from "../lib/prisma";
import Answer from "../components/Answer";

export const getServerSideProps = async () => {
  const questions = await prisma.question.findMany({
    include: {
      author: true,
    },
  });
  const answers = await prisma.answer.findMany({
    include: {
      author: true,
    },
  });
  return {
    props: { questions, answers },
  };
};

export default function Download(props) {
  
  let printQuestionsAnswers = () => {
    return props.questions.map((question) => {
      return [<Question data={question}></Question>].concat(
        props.answers.map((answer) => {
          if (answer.questionId === question.id)
            return <Answer data={answer}></Answer>;
        })
      );
    });
  };

  const { user, isLoading } = useUser();
  const [title, setTitle] = useState("");
  const [content, setContent] = useState("");

  if (isLoading) return <div>Loading...</div>;

  const submitData = async (e) => {
    try {
      const body = { title, content, user };
      await fetch("/api/postQuestion", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(body),
      });
      await Router.push("/faq");
      setContent("");
      setTitle("");
    } catch (error) {
      console.error(error);
    }
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <link
          href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css"
          rel="stylesheet"
          integrity="sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD"
          crossorigin="anonymous"
        ></link>
      </Head>

      <Header></Header>

      <div className={styles.main_title_box}>
        <div className={styles.main_image}> </div>
        <h1 className={styles.main_title}>FAQs</h1>
      </div>

      {!user && (
        <div className={styles.main_page_box_disconnected}>
          <div className={styles.main_page_disconnected}>
            <h2 className={styles.main_page_title}>
              Vous n&apos;êtes pas connecté
            </h2>
            <p className={styles.main_page_text}>
              Vous devez être connecté pour accéder à cette page.
            </p>

            <Link href="/api/auth/login">
              <button type="button" className="btn btn-primary">
                Log-in
              </button>
            </Link>
          </div>
        </div>
      )}

      {user && (
        <div className={styles.main_page_box_connected}>
          <div className={styles.main_page_connected}>
            <h2 className={styles.main_page_title}>FAQ</h2>
            <p className={styles.main_page_text}>
              Sur cette page, vous pouvez poser vos questions et obtenir des
              réponses par d&apos;autres utilisateurs. Vous pouvez également
              consulter les questions et réponses déjà posées.
            </p>

            <div className={styles.send_question_box}>
              <h3 className={styles.send_question_title}>Poser une question</h3>
              <p className={styles.send_question_text}>
                Vous pouvez poser une question à l&apos;aide de ce formulaire :
              </p>
              <form>
                <div className="form-group">
                  <textarea
                    class="form-control"
                    id="exampleFormControlTextarea1"
                    rows="1"
                    placeholder="Titre de la question"
                    onChange={(e) => setTitle(e.target.value)}
                    value={title}
                  ></textarea>
                  <textarea
                    class="form-control"
                    id="exampleFormControlTextarea1"
                    rows="3"
                    onChange={(e) => setContent(e.target.value)}
                    value={content}
                  ></textarea>
                </div>
              </form>
              <button
                type="button"
                className="btn btn-primary"
                onClick={() => submitData()}
              >
                Envoyer
              </button>
            </div>

            <hr></hr>

            <div className={styles.questions_box}>
              <h3 className={styles.questions_title}>Questions</h3>
              {printQuestionsAnswers(props.questions, props.answers)}
            </div>
          </div>
        </div>
      )}

      <script
        src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-w76AqPfDkMBDXo30jS1Sgez6pr3x5MlQ1ZAGC+nuZB+EYdgRZgiwxhTBTkF7CXvN"
        crossorigin="anonymous"
        async
      ></script>

      <Footer></Footer>
    </>
  );
}
